version: '3'
services:
  postgrescinema:
    image: postgres:13
    restart: unless-stopped
    container_name: cinemaDB
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - ./db/production:/var/lib/postgresql/data
    ports:
      - $POSTGRES_PORT:5432
    networks:
      - cinema_net
  djangocinema:
    restart: unless-stopped
    container_name: cinemaDjango
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=postgrescinema
      - POSTGRES_PORT=5432
      - POSTGRES_SCHEMA=$POSTGRES_SCHEMA
      - DJANGO_HOST=$DJANGO_HOST
      - DJANGO_PORT=$DJANGO_PORT
      - DJANGO_SECRET=$DJANGO_SECRET
    build: ./cinema_admin/
    command: /docker-entrypoint.sh
    volumes:
      - web-static:/cinema_admin/config/static
    networks: 
      - cinema_net
    depends_on:
      - postgrescinema
  nginxcinema:
    restart: unless-stopped
    container_name: cinemaNginx
    environment:
      - DJANGO_SERVICE_NAME=djangocinema
      - DJANGO_PORT=$DJANGO_PORT
    build: ./nginx/
    volumes: 
      - web-static:/usr/share/nginx/html/static:ro
    ports:
      - $NGINX_HTTP_PORT:80
    networks: 
      - cinema_net
    depends_on:
      - djangocinema
  sqlite2pgcinema:
    restart: 'no'
    container_name: cinemaSqlite2PG
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=postgrescinema
      - POSTGRES_PORT=5432
      - POSTGRES_SCHEMA=$POSTGRES_SCHEMA
    build: ./sqlite_to_postgres/
    volumes:
      - dump-db:/sqlite_to_postgres/db
    networks:
      - cinema_net
    depends_on:
      - postgrescinema
  rediscinema:
    restart: unless-stopped
    container_name: cinemaRedis
    environment:
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - REDIS_PORT=$REDIS_PORT
    build: ./redis/
    volumes:
      - ./redis/production:/data
    networks:
      - cinema_net
  elasticcinema01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: cinemaES01
    environment:
      - node.name=elasticcinema01
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
    volumes:
      - ./elastic/production:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - cinema_net
  pg2escinema:
    restart: 'no'
    container_name: pg2es
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=postgrescinema
      - POSTGRES_SCHEMA=$POSTGRES_SCHEMA
      - REDIS_PREFIX=$REDIS_PREFIX
      - REDIS_HOST=rediscinema
      - REDIS_PORT=$REDIS_PORT
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - ELASTIC_HOST=elasticcinema01
      - ELASTIC_PORT=$ELASTIC_PORT
      - ELASTIC_USER=$ELASTIC_USER
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_INDEX=$ELASTIC_INDEX
      - ETL_SIZE_LIMIT=$ETL_SIZE_LIMIT
    build: ./postgres_to_es/
    command: /docker-entrypoint.sh
    networks:
      - cinema_net
    depends_on:
      - postgrescinema
      - rediscinema
      - elasticcinema01
volumes:
  web-static:
  dump-db:
networks:
  cinema_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24     
